# minikube start
# kubectl apply -f k8s-deployment.yml
# kubectl get deployments
# kubectl get pods
# kubectl get pods 
# kubectl port-forward go-name-store-7494cf9955-9vjx8 8080:8080
# curl -s -X PUT 'localhost:8080?name=Hasti'
# kubectl logs -f go-name-store-7494cf9955-9vjx8

apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: go-name-store            # Name of the Kubernetes resource
spec:
  replicas: 3                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: go-name-store         # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: go-name-store
    spec:                        # Spec for the container which will run in the Pod
      containers:
      - name: go-name-store
        image: hastigd/go-name-store:1.0.0 
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080  # Should match the port number that the Go application listens on
        livenessProbe:           # To check the health of the Pod
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:          # To check if the Pod is ready to serve traffic or not
          httpGet:
            path: /readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1 
